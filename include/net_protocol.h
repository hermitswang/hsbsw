
#ifndef _NET_PROTOCOL_H_
#define _NET_PROTOCOL_H_

typedef enum {
	HSB_CMD_BOX_DISCOVER = 0x8801,
	HSB_CMD_BOX_DISCOVER_RESP = 0x8802,
	HSB_CMD_GET_DEVS = 0x8811,
	HSB_CMD_GET_DEVS_RESP = 0x8812,
	HSB_CMD_GET_INFO = 0x8813,
	HSB_CMD_GET_INFO_RESP = 0x8814,
	HSB_CMD_GET_STATUS = 0x8821,
	HSB_CMD_GET_STATUS_RESP = 0x8822,
	HSB_CMD_SET_STATUS = 0x8823,
	HSB_CMD_GET_TIMER = 0x8831,
	HSB_CMD_GET_TIMER_RESP = 0x8832,
	HSB_CMD_SET_TIMER = 0x8833,
	HSB_CMD_DEL_TIMER = 0x8834,
	HSB_CMD_GET_DELAY = 0x8841,
	HSB_CMD_GET_DELAY_RESP = 0x8842,
	HSB_CMD_SET_DELAY = 0x8843,
	HSB_CMD_DEL_DELAY = 0x8844,
	HSB_CMD_GET_LINKAGE = 0x8851,
	HSB_CMD_GET_LINKAGE_RESP = 0x8852,
	HSB_CMD_SET_LINKAGE = 0x8853,
	HSB_CMD_DEL_LINKAGE = 0x8854,
	HSB_CMD_PROBE_DEV = 0x8861,
	HSB_CMD_EVENT = 0x8871,
	HSB_CMD_DO_ACTION = 0x8881,
	HSB_CMD_RESULT = 0x88A1,
	HSB_CMD_LAST,
} HSB_CMD_T;

#define HSB_CMD_VALID(x)	(x >= HSB_CMD_BOX_DISCOVER && x < HSB_CMD_LAST)

typedef struct {
	uint16_t	id;
	uint16_t	val;
} HSB_STATUS_T;

#endif

